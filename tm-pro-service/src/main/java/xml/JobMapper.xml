<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tm.pro.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="org.tm.pro.entity.Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
    <result column="clazz_name" jdbcType="VARCHAR" property="clazzName" />
    <result column="is_concurrent" jdbcType="BIT" property="isConcurrent" />
    <result column="is_startup_execution" jdbcType="BIT" property="isStartupExecution" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_id, job_name, group_id, status, cron, clazz_name, is_concurrent, is_startup_execution, 
    description, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="org.tm.pro.entity.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.tm.pro.entity.JobExample">
    delete from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tm.pro.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_job (job_id, job_name, group_id, 
      status, cron, clazz_name, 
      is_concurrent, is_startup_execution, description, 
      create_time, update_time)
    values (#{jobId,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{cron,jdbcType=VARCHAR}, #{clazzName,jdbcType=VARCHAR}, 
      #{isConcurrent,jdbcType=BIT}, #{isStartupExecution,jdbcType=BIT}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.tm.pro.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        job_id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cron != null">
        cron,
      </if>
      <if test="clazzName != null">
        clazz_name,
      </if>
      <if test="isConcurrent != null">
        is_concurrent,
      </if>
      <if test="isStartupExecution != null">
        is_startup_execution,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="cron != null">
        #{cron,jdbcType=VARCHAR},
      </if>
      <if test="clazzName != null">
        #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="isConcurrent != null">
        #{isConcurrent,jdbcType=BIT},
      </if>
      <if test="isStartupExecution != null">
        #{isStartupExecution,jdbcType=BIT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tm.pro.entity.JobExample" resultType="java.lang.Long">
    select count(*) from tb_job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.cron != null">
        cron = #{record.cron,jdbcType=VARCHAR},
      </if>
      <if test="record.clazzName != null">
        clazz_name = #{record.clazzName,jdbcType=VARCHAR},
      </if>
      <if test="record.isConcurrent != null">
        is_concurrent = #{record.isConcurrent,jdbcType=BIT},
      </if>
      <if test="record.isStartupExecution != null">
        is_startup_execution = #{record.isStartupExecution,jdbcType=BIT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_job
    set id = #{record.id,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      cron = #{record.cron,jdbcType=VARCHAR},
      clazz_name = #{record.clazzName,jdbcType=VARCHAR},
      is_concurrent = #{record.isConcurrent,jdbcType=BIT},
      is_startup_execution = #{record.isStartupExecution,jdbcType=BIT},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.tm.pro.entity.Job">
    update tb_job
    <set>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="cron != null">
        cron = #{cron,jdbcType=VARCHAR},
      </if>
      <if test="clazzName != null">
        clazz_name = #{clazzName,jdbcType=VARCHAR},
      </if>
      <if test="isConcurrent != null">
        is_concurrent = #{isConcurrent,jdbcType=BIT},
      </if>
      <if test="isStartupExecution != null">
        is_startup_execution = #{isStartupExecution,jdbcType=BIT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.tm.pro.entity.Job">
    update tb_job
    set job_id = #{jobId,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      cron = #{cron,jdbcType=VARCHAR},
      clazz_name = #{clazzName,jdbcType=VARCHAR},
      is_concurrent = #{isConcurrent,jdbcType=BIT},
      is_startup_execution = #{isStartupExecution,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>